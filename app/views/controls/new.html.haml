= render "layouts/google_map_api"
= render "layouts/header"
= render partial: "layouts/header_orienteering", locals: { orienteering: @orienteering }
.wrapper
  .control-new-contents
    = render partial: "form", locals: { orienteering: @orienteering, control: @control }
= render "layouts/footer"

:javascript
  let lat = parseFloat('#{@lat}');
  let lng = parseFloat('#{@lng}');
  let zoomflag = parseFloat('#{@zoomflag}');
  let zoom;
  if (zoomflag == "1") {zoom = 16;} else {zoom = 12;}
  let map;
  let marker;
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: zoom,
      center: { lat: lat, lng: lng }
    });
    const geocoder = new google.maps.Geocoder();
    document.getElementById("submit").addEventListener("click", () => {
      geocodeAddress(geocoder, map);
    });
    marker = new google.maps.Marker({position: map.getCenter(), map: map});

    map.addListener('center_changed', dispLatLng);
  }

  function geocodeAddress(geocoder, resultsMap) {
    resultsMap.setZoom(16);
    const address = document.getElementById("address").value;
    geocoder.geocode({ address: address }, (results, status) => {
      if (status === "OK") {
        resultsMap.setCenter(results[0].geometry.location);
        // new google.maps.Marker({
        //   map: resultsMap,
        //   position: results[0].geometry.location
        // });
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }

  function dispLatLng(){
    let latlng = map.getCenter();
    marker.setMap(null);
    marker = new google.maps.Marker({position: latlng, map: map});

    $("#control_position_lat").val(latlng.lat());
    $("#control_position_lng").val(latlng.lng());
  }
