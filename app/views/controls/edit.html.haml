%script{:defer => "", :src => "https://maps.googleapis.com/maps/api/js?key=AIzaSyAk3yZOiqYz38KM80EH9LxlDW1mrUAuCBI&callback=initMap&libraries=&v=weekly"}
controls/edit


= form_with model: [@orienteering, @control], local: true do |f|
  .setting-group-form__field
    = f.label :name, "Control name", class: 'setting-group-form__label'
    = f.text_field :name, class: 'setting-group-form__input', placeholder: 'input control name'
  .setting-group-form__field
    = f.label :question, "question", class: 'setting-group-form__label'
    = f.text_area :question, class: 'setting-group-form__input', placeholder: 'input question', size: "20x3"
  .setting-group-form__field
    = f.label :choice, "choices", class: 'setting-group-form__label'
    = f.text_area :choice, class: 'setting-group-form__input', placeholder: 'input question', size: "20x5"
  .setting-group-form__field
    = f.label :answer, "answer", class: 'setting-group-form__label'
    = f.text_field :answer, class: 'setting-group-form__input', placeholder: 'input answer'
  .setting-group-form__field
    = f.label :position_lat, "position_lat", class: 'setting-group-form__label'
    = f.text_field :position_lat, class: 'setting-group-form__input'
  .setting-group-form__field
    = f.label :position_lng, "position_lng", class: 'setting-group-form__label'
    = f.text_field :position_lng, class: 'setting-group-form__input'
  .setting-group-form__field
    = f.label :point, "point", class: 'setting-group-form__label'
    = f.text_field :point, class: 'setting-group-form__input'
  .setting-group-form__field
    = f.submit class: 'setting-group-form__button'

:plain
  <style>
    #map{
      height: 400px;
    }
  </style>

%br/

#floating-panel
  %input{id: "address", type: "textbox"}
  %input{id: "submit", type: "button", value: "Geocode"}
#map


- lat = @control.position_lat
- lng = @control.position_lng

:javascript
  let lat = parseFloat('#{lat}');
  let lng = parseFloat('#{lng}');
  let map;
  let marker;
  function initMap() {
    map = new google.maps.Map(document.getElementById("map"), {
      zoom: 16,
      center: { lat: lat, lng: lng }
    });
    const geocoder = new google.maps.Geocoder();
    document.getElementById("submit").addEventListener("click", () => {
      geocodeAddress(geocoder, map);
    });
    marker = new google.maps.Marker({position: map.getCenter(), map: map});

    map.addListener('center_changed', dispLatLng);
  }

  function geocodeAddress(geocoder, resultsMap) {
    resultsMap.setZoom(16);
    const address = document.getElementById("address").value;
    geocoder.geocode({ address: address }, (results, status) => {
      if (status === "OK") {
        resultsMap.setCenter(results[0].geometry.location);
        // new google.maps.Marker({
        //   map: resultsMap,
        //   position: results[0].geometry.location
        // });
      } else {
        alert("Geocode was not successful for the following reason: " + status);
      }
    });
  }

  function dispLatLng(){
    let latlng = map.getCenter();
    marker.setMap(null);
    marker = new google.maps.Marker({position: latlng, map: map});

    $("#control_position_lat").val(latlng.lat());
    $("#control_position_lng").val(latlng.lng());
  }



